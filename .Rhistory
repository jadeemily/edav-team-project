getwd()
library(bigr)
install.packages("~/Downloads/bigr-1.0.tar.gz", repos = NULL, type = "source")
library(bigr)
install.packages('bigr-1.0.tar.gz',repos=NULL,type="source")
install.packages("~/Downloads/bigr-1.0.tar.gz", repos = NULL, type = "source")
install.packages(c("rJava", "base64enc", "data.table"))
install.packages("~/Downloads/bigr-1.0.tar.gz", repos = NULL, type = "source")
library(bigr)
bigr.connect(host="bivm", port=7052, database="default", user="biadmin", password="biadmin")
bigr.connect(host="bivm", port=7052, database="default", user="prumaj", password="abate123")
clear
clear()
install.packages("Rserve")
install.packages("RJSONIO")
install.packages("RCurl")
rm(list=ls())
source("glassdoor_non_working_api.R")
setwd("~/Columbia/edav-team-project")
source("glassdoor_non_working_api.R")
source("glassdoor_nonworking_api.R")
source("glassdoor_nonworking_api.R")
source("glassdoor_nonworking_api.R")
source("glassdoor_nonworking_api.R")
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=1")
myurl
raw_data <- fromJSON(myurl, flatten=TRUE)
raw_data <- fromJSON(myurl)
i
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=1")
raw_data <- fromJSON(myurl)
require("rjsonlite")
require("jsonlite")
myurl
raw_data <- fromJSON(myurl)
raw_data2 <- fromJSON(myurl, flatten=TRUE)
data <- as.data.frame(raw_data$response[5])
page_count <- raw_data$response$totalNumberOfPages
if (page_count > 1) {
i <- 1
} else {
cat("\nError: no pages retrieved!")
}
while (i <= page_count) {
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
df <- rbind(data, page)
i <- i + 10
}
i
while (i <= page_count) {
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
data <- rbind(data, page)
i <- i + 10
}
i
i
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=1")
raw_data <- fromJSON(myurl, flatten=TRUE)
data <- as.data.frame(raw_data$response[5])
page_count <- raw_data$response$totalNumberOfPages
if (page_count > 1) {
i <- 2
} else {
cat("\nError: no data retrieved!")
}
while (i <= page_count) {
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
data <- rbind(data, page)
i <- i + 10
}
i
myurl
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
str(page)
str(data)
str(page)
?exists
while (i <= page_count) {
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
data <- fromJSON(myurl, flatten=TRUE)
if (ncol(page) == 35) {
data  <- rbind(data, page)
} else {                              ## some entries are missing the ceo image
if (exists(data2)) {
data2 <- rbind(data, page)
} else {
data2 <- as.data.frame(raw_data$response[5])
}
}
i <- i + 10
}
data2 <- as.data.drame(matrix(ncol=32,nrow=1, byrow=TRUE)
)
data2 <- as.data.frame(matrix(ncol=32,nrow=1, byrow=TRUE)
)
data2 <- as.data.frame(matrix(ncol=32,nrow=1, byrow=TRUE))
View(data2)
data2 <- as.data.frame(matrix(ncol=32,nrow=1, byrow=TRUE))
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=1")
raw_data <- fromJSON(myurl, flatten=TRUE)
data <- as.data.frame(raw_data$response[5])
data2 <- as.data.frame(matrix(ncol=32,nrow=1, byrow=TRUE))
page_count <- raw_data$response$totalNumberOfPages
if (page_count > 1) {
i <- 2
} else {
cat("\nError: no data retrieved!")
}
while (i <= page_count) {
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
data <- fromJSON(myurl, flatten=TRUE)
if (ncol(page) == 35) {
data  <- rbind(data, page)
} else {                              ## some entries are missing the ceo image
data2 <- as.data.frame(raw_data$response[5])
}
i <- i + 10
}
i
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=1")
raw_data <- fromJSON(myurl, flatten=TRUE)
data <- as.data.frame(raw_data$response[5])
data2 <- as.data.frame(matrix(ncol=32,nrow=1, byrow=TRUE))
page_count <- raw_data$response$totalNumberOfPages
if (page_count > 1) {
i <- 2
} else {
cat("\nError: no data retrieved!")
}
i
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
data <- fromJSON(myurl, flatten=TRUE)
ncol(page)
data  <- rbind(data, page)
ncol(page)
ncol(data)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=1")
raw_data <- fromJSON(myurl, flatten=TRUE)
data <- as.data.frame(raw_data$response[5])
data2 <- as.data.frame(matrix(ncol=32,nrow=1, byrow=TRUE))
page_count <- raw_data$response$totalNumberOfPages
if (page_count > 1) {
i <- 2
} else {
cat("\nError: no data retrieved!")
}
while (i <= page_count) {
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
page <- as.data.frame(raw_data$response[5])
if (ncol(page) == 35) {
data  <- rbind(data, page)
} else {                              ## some entries are missing the ceo image
data2 <- as.data.frame(raw_data$response[5])
}
i <- i + 10
}
View(data2)
View(data2)
i
page_count
i
i
View(data)
i <- 11
myurl <- paste0("http://api.glassdoor.com/api/api.htm?v=1&format=json&t.p=31640&t.k=j3G7m4V1Dbg&",
"action=employers&city=new%20%york&state=ny&userip=69.136.97.180&format=json&action=employers&pn=",i)
raw_data <- fromJSON(myurl, flatten=TRUE)
View(data)
write.csv(data, file="gd_top100")
write.csv(data, file="gd_top100.csv")
?date
?sys.date
?Sys.Date
Sys.time
Sys.time()
substr(Sys.time(),1,10)
paste0(substr(Sys.time(),1,10), "_", substr(Sys.time(),12,19))
substr(Sys.time(),12,19)
substr(Sys.time(),1,10)
paste0(substr(Sys.time(),1,10), "-", substr(Sys.time(),12,19))
paste0(substr(Sys.time(),1,10), ".", substr(Sys.time(),12,19))
fn <- paste0("gd_data_", paste0(substr(Sys.time(),1,10), ".", substr(Sys.time(),12,19)), ".csv")
fn
write.csv(data, file=fn, row.names=TRUE)
fn
fn <- paste0("gd_data_", paste0(substr(Sys.time(),1,10), ".", substr(Sys.time(),12,19)), ".csv")
fn <- paste0("gd_data_", paste0(substr(Sys.time(),1,10), ".",
substr(Sys.time(),12,13)),
substr(Sys.time(),15,16)),
substr(Sys.time(),15,16)),
".csv")
fn <- paste0("gd_data_", paste0(substr(Sys.time(),1,10), ".",
substr(Sys.time(),12,13),
substr(Sys.time(),15,16),
substr(Sys.time(),18,19),
".csv")
)
fn <- paste0("gd_data_", paste0(substr(Sys.time(),1,10), ".",
substr(Sys.time(),12,13),
substr(Sys.time(),15,16),
substr(Sys.time(),18,19),
".csv"))
FN
fn
write.csv(data, file=fn, row.names=TRUE)
setwd("~/Columbia/edav-team-project/Data")
?read.csv
ds_jobs <- read.csv("datascientist_jobresults.csv", header=TRUE, stringsAsFactors=FALSE)
View(ds_jobs)
?upper
indeed_companies <- toupper(ds_jobs$company)
View(data)
gd_companies <- toupper(data$employers.name)
gd_companies
indeed_companies
indeed_companies <- unique(toupper(ds_jobs$company))
setwd("~/Columbia/edav-team-project")
gd_companies <- unique(toupper(data$employers.name))
require("qdapTools")
?lookup
indeed_companies <- as.data.frame(unique(toupper(ds_jobs$company)))
View(indeed_companies)
names(indeed_companies) <- "indeed_company_name"
View(indeed_companies)
names(indeed_companies) <- "company_name"
indeed_companies$found_match_on_gd <- lookup(indeed_companies$company_name, gd_companies)
lookup(indeed_companies$company_name[1], gd_companies)
t <- indeed_companies$company_name[1]
t
View(indeed_companies)
str(indeed_companies)
?unique
?unique
indeed_companies <- unique(toupper(ds_jobs$company))
names(indeed_companies) <- "company_name"
str(indeed_companies)
class(indeed_companies)
indeed_companies <- as.data.frame(unique(toupper(ds_jobs$company)))
names(indeed_companies) <- "company_name"
class(indeed_companies)
str(indeed_companies)
?as.data.frame
indeed_companies <- as.data.frame(unique(toupper(ds_jobs$company)), stringsAsFactors=FALSE)
names(indeed_companies) <- "company_name"
View(indeed_companies)
gd_companies <- unique(toupper(data$employers.name))
t <- indeed_companies$company_name[1]
t
lookup(t, gd_companies)
lookup(t, gd_companies, 1)
t
t <- indeed_companies$company_name[60]
lookup(t, gd_companies, 1)
t
library(sqldf)
gd_companies <- as.data.frame(unique(toupper(data$employers.name)), stringsAsFactors=FALSE)
names(gd_companies) <- "company_name"
sqldf("select * from gd_companies where company_name == 'MEDIAMATH')
)
